name: CMake Multi-Platform Build with Conan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++

    runs-on: ${{ matrix.os }}

    steps:
    # 1. Checkout repo
    - uses: actions/checkout@v4

    # 2. Install Python (needed for Conan) and Conan
    - name: Install Python & Conan
      if: runner.os == 'Windows'
      run: |
        choco install python -y
        pip install --upgrade conan
    - name: Install Conan on Linux
      if: runner.os == 'Linux'
      run: pip install --upgrade conan

    # 3. Detect Conan profile
    - name: Conan profile detect
      run: conan profile detect --force

    # 4. Install dependencies with Conan
    - name: Conan install dependencies
      run: conan install . --output-folder=build --build=missing

    # 5. Configure CMake
    - name: Configure CMake
      run: |
        cmake -B build \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -S .


    # 6. Build project
    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
